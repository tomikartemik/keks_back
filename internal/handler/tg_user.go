package handler

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"strings"
	"tg_shop/internal/model"
)

func (h *Handler) HandleStart(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	telegramID := update.Message.From.ID

	existingUser, err := h.services.GetUserById(int(telegramID))
	if err == nil {
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, fmt.Sprintf(
			"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, %s! –í–∞—à —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫: %s",
			existingUser.Username, existingUser.Language,
		))
		bot.Send(msg)
		sendMainMenu(bot, update.Message.Chat.ID)
		return
	}

	if err != nil && !strings.Contains(err.Error(), "record not found") {
		log.Printf("Error checking user existence: %v", err)
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		bot.Send(msg)
		return
	}

	h.userStates[telegramID] = "language"

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:")
	languageKeyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üá∑üá∫–†—É—Å—Å–∫–∏–π"),
			tgbotapi.NewKeyboardButton("üá∫üá∏English"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üá™üá∏Spanish"),
			tgbotapi.NewKeyboardButton("üá©üá™Deutsch"),
		),
	)
	msg.ReplyMarkup = languageKeyboard
	bot.Send(msg)
}

func (h *Handler) HandleUserInput(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	telegramID := update.Message.From.ID
	messageText := strings.TrimSpace(update.Message.Text)

	log.Printf("User %d state: %s", telegramID, h.userStates[telegramID])
	log.Printf("Received message: %s", messageText)

	if h.userStates[telegramID] == "language" {
		var language string
		switch messageText {
		case "üá∑üá∫–†—É—Å—Å–∫–∏–π":
			language = "ru"
		case "üá∫üá∏English":
			language = "en"
		case "üá™üá∏Spanish":
			language = "es"
		case "üá©üá™Deutsch":
			language = "de"
		default:
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
			bot.Send(msg)
			return
		}

		log.Printf("Langugage: %s", language)
		newUser := model.User{
			TelegramID: int(telegramID),
			Language:   language,
		}
		log.Printf("User: %s", newUser)
		_, err := h.services.CreateOrUpdateUser(newUser)
		if err != nil {
			log.Printf("Error creating/updating user: %v", err)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
			bot.Send(msg)
			return
		}

		delete(h.userStates, telegramID)
		h.userStates[telegramID] = "username"
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, h.getLocalizedMessage(language, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:"))
		bot.Send(msg)
		return
	}

	if h.userStates[telegramID] == "username" {
		username := messageText

		user := model.User{
			TelegramID: int(telegramID),
			Username:   username,
		}

		_, err := h.services.CreateOrUpdateUser(user)
		if err != nil {
			log.Printf("Error updating username: %v", err)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
			bot.Send(msg)
			return
		}

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, fmt.Sprintf("–í–∞—à–µ –∏–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: %s", username))
		bot.Send(msg)

		delete(h.userStates, telegramID)
		sendMainMenu(bot, update.Message.Chat.ID)
		return
	}

	if h.userStates[telegramID] == "" {
		switch messageText {
		case "üìã –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.")
			bot.Send(msg)
		case "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
			user, err := h.services.GetUserById(int(telegramID))
			if err != nil {
				log.Printf("Error fetching user profile: %v", err)
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è.")
				bot.Send(msg)
				return
			}
			profileMessage := fmt.Sprintf("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n–ò–º—è: %s\n–ë–∞–ª–∞–Ω—Å: %.2f\n–†–µ–π—Ç–∏–Ω–≥: %.2f", user.Username, user.Balance, user.Rating)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, profileMessage)
			bot.Send(msg)
		case "üìå –í–∞–∂–Ω–æ–µ":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...")
			bot.Send(msg)
		case "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º...")
			bot.Send(msg)
		case "üåê –ù–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã:\n1. –°–µ—Ä–≤–∏—Å A\n2. –°–µ—Ä–≤–∏—Å B...")
			bot.Send(msg)
		default:
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.")
			bot.Send(msg)
		}
		return
	}

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.")
	bot.Send(msg)
}

func (h *Handler) getLocalizedMessage(language, defaultMessage string) string {
	messages := map[string]map[string]string{
		"ru": {"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:": "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:"},
		"en": {"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:": "Please enter your name:"},
		"es": {"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:": "Por favor, introduzca su nombre:"},
		"de": {"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:": "Bitte geben Sie Ihren Namen ein:"},
	}

	if localized, ok := messages[language][defaultMessage]; ok {
		return localized
	}
	return defaultMessage
}

func sendMainMenu(bot *tgbotapi.BotAPI, chatID int64) {
	menuMessage := "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
	menuKeyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìã –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"),
			tgbotapi.NewKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìå –í–∞–∂–Ω–æ–µ"),
			tgbotapi.NewKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üåê –ù–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, menuMessage)
	msg.ReplyMarkup = menuKeyboard

	_, err := bot.Send(msg)
	if err != nil {
		log.Printf("Error sending main menu: %v", err)
	}
}
